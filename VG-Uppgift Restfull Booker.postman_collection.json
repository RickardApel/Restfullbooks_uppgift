{
	"info": {
		"_postman_id": "3e8b6cee-b89e-4ea9-a797-345d10e1caca",
		"name": "VG-Uppgift Restfull Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29559354"
	},
	"item": [
		{
			"name": "Create token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"A token was created\", function () {\r",
							"    var responseJSON = pm.response.json();\r",
							"    pm.expect(responseJSON.token).to.exist.and.to.be.a('string').and.to.have.lengthOf.above(0);\r",
							"});\r",
							"\r",
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"\r",
							"pm.test(\"A token was created\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.token).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that the token is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// Retrieve the token from the response\r",
							"var token = pm.response.json().token;\r",
							"\r",
							"// Set the token as an environment variable\r",
							"pm.environment.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"A booking was created\", function () {\r",
							"    var responseJSON = pm.response.json();\r",
							"    pm.expect(responseJSON.bookingid).to.exist;\r",
							"    pm.expect(responseJSON.booking).to.exist;\r",
							"    pm.expect(responseJSON.booking.firstname).to.exist;\r",
							"    pm.expect(responseJSON.booking.lastname).to.exist;\r",
							"    pm.expect(responseJSON.booking.totalprice).to.exist;\r",
							"    pm.expect(responseJSON.booking.depositpaid).to.exist;\r",
							"    pm.expect(responseJSON.booking.bookingdates).to.exist;\r",
							"    pm.expect(responseJSON.booking.bookingdates.checkin).to.exist;\r",
							"    pm.expect(responseJSON.booking.bookingdates.checkout).to.exist;\r",
							"    pm.expect(responseJSON.booking.additionalneeds).to.exist;\r",
							"});\r",
							"\r",
							"// Store the booking ID in an environment variable\r",
							"var bookingId = pm.response.json().bookingid;\r",
							"pm.environment.set(\"bookingId\", bookingId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Rickard\",\r\n    \"lastname\" : \"Apeln\",\r\n    \"totalprice\" : 112,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2022-01-01\",\r\n        \"checkout\" : \"2023-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get bookingdetails by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the firstname field is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.firstname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the 'lastname' field is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.lastname).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Total price is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.totalprice).to.be.a('number').and.to.be.at.least(0, \"Total price should be a non-negative integer\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the 'depositpaid' field is a boolean\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.depositpaid).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the 'bookingdates' field is an object\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.bookingdates).to.be.an('object');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get bookingsIDs (filter by name)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking?firstname=Rickard&lastname=Apeln",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Rickard"
						},
						{
							"key": "lastname",
							"value": "Apeln"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get bookingsIDs (filter by date)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking?checkin=2014-03-13&checkout=2014-05-21",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "2014-03-13"
						},
						{
							"key": "checkout",
							"value": "2014-05-21"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Rickard\",\r\n    \"lastname\" : \"Apel\",\r\n    \"totalprice\" : 112,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2022-01-01\",\r\n        \"checkout\" : \"2023-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Status code is: \" + pm.response.code + \" \" + pm.response.status);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	]
}